#!/bin/bash -e

chroot_run() {
	mount_pseudofs
	chroot $WDIR $@
	umount_pseudofs
}

mount_pseudofs() {
	mount --bind /dev $WDIR/dev
	mount -t devpts devpts $WDIR/dev/pts -o gid=5,mode=620
	mount -t proc proc $WDIR/proc
	mount -t sysfs sysfs $WDIR/sys
	mount -t tmpfs tmpfs $WDIR/run
}

umount_pseudofs() {
	umount $WDIR/dev/pts
	umount $WDIR/dev
	umount $WDIR/run
	umount $WDIR/proc
	umount $WDIR/sys
}

usage() {
	cat << EOF
Usage:
  $(basename $0) [options]
  
Options:
  -c, --cache        set package cache directory
  -p, --package      package to install into iso
  -i, --initrd       use custom initrd
  -k, --kernel       use custom kernel
  -o, --output       output name for iso
  
EOF
}

CWD=$PWD
WDIR=/tmp/venomrootfs
ISOLINUXDIR=$CWD/isolinux
DISTRONAME="Venom Linux"
VENOMSRC=/mnt/venom
LABEL=VenomLive
OUTPUT=venom.iso
DATE=$(date +"%Y%m%d")

selecteddir="bin dev home lib64 mnt proc run srv tmp var boot etc lib media opt root sbin sys usr"

isolinux_files="chain.c32 isolinux.bin ldlinux.c32 libutil.c32 reboot.c32 vesamenu.c32
isohdpfx.bin isolinux.cfg libcom32.c32 poweroff.c32 splash.png"

rm -fr $WDIR
mkdir -p $WDIR

tar -xvJpf $1 -C $WDIR

# mount bind cache
mkdir -p $CWD/cache_packages $CWD/cache_sources
mount --bind $CWD/cache_packages $WDIR/var/cache/scratchpkg/packages
mount --bind $CWD/cache_sources $WDIR/var/cache/scratchpkg/sources

# install pkgs
chroot_run scratch sync
chroot_run scratch sysup --no-confirm

# umount binded cache
umount $WDIR/var/cache/scratchpkg/sources
umount $WDIR/var/cache/scratchpkg/packages

# generate initrd
#kernver=$(file $VENOMSRC/boot/vmlinuz-venom | cut -d ' ' -f9)
#chroot_run mkinitramfs -k $kernver -o /boot/initrd-venom.img

rm -f venomlinux-$DATE.txz
pushd $WDIR >/dev/null

tar --exclude="var/cache/scratchpkg/packages/*" \
	--exclude="var/cache/scratchpkg/sources/*" \
	--exclude="*.spkgnew" \
	--exclude="tmp/*" \
	-cvJpf $CWD/venomlinux-$DATE.txz $selecteddir
	
popd >/dev/null

exit 0
