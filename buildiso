#!/bin/bash -e

trap "cleartmpdir" SIGHUP SIGINT SIGQUIT SIGTERM

cleartmpdir() {
	rm -fr $VENOMISODIR
}

die() {
	echo "!! Error occurs !!"
	cleartmpdir
	exit 1
}

msg() {
	echo ":: $@"
}
					
prepareisolinux() {
	msg "preparing isolinux files"
	mkdir -p $VENOMISO/{filesystem,isolinux,boot}
	cp $ISOLINUXDIR/* $VENOMISO/isolinux
	echo "$DISTRONAME" > $VENOMISO/isolinux/venomlive
	cp $VENOMROOTSFS $VENOMISO/filesystem/root.sfs
	[ -d $OVERLAYDIR ] && cp -aR $OVERLAYDIR $VENOMISO
}

build_iso() {
	prepareisolinux
	prepare_bootfiles
	rm -f $OUTPUT
	msg "making iso"
	xorriso -as mkisofs \
		-r -J -joliet-long \
		-l -cache-inodes \
		-isohybrid-mbr $CWD/isolinux/isohdpfx.bin \
		-partition_offset 16 \
		-A "$LABEL" \
		-V "$LABEL" \
		-b isolinux/isolinux.bin \
		-c isolinux/boot.cat \
		-no-emul-boot \
		-boot-load-size 4 \
		-boot-info-table \
		-o $OUTPUT \
		$VENOMISO
}

prepare_bootfiles() {
	# kernel
	if [ -f $VENOMROOTFS/boot/vmlinuz-venom ]; then
		msg "copying kernel..."
		cp $VENOMROOTFS/boot/vmlinuz-venom $VENOMISO/boot/vmlinuz
	else
		msg "kernel (vmlinuz-venom) not exist!"
		exit 1
	fi

	# initrd
	if [ -f $VENOMROOTFS/boot/initrd-venom.img ]; then
		msg "copying initramfs..."
		cp $VENOMROOTFS/boot/initrd-venom.img $VENOMISO/boot/initrd
	else
		msg "initramfs image (initrd) not exist!"
		exit 1
	fi
}

extract_rootfs() {
	if [ ! -f $ROOTFS ]; then
		msg "ERROR: venom rootfs not exist."
		exit 1
	fi
	mkdir -p $VENOMROOTFS
	msg "extract $ROOTFS"
	tar xJpf $ROOTFS -C $VENOMROOTFS
	if [ $? != 0 ]; then
		msg "ERROR: error extracting $ROOTFS."
		exit 1
	fi
}

make_rootsfs() {
	msg "making root.sfs"
	rm -f $CWD/root.sfs
	mksquashfs $VENOMROOTFS $VENOMROOTSFS \
		-b 1048576 -comp xz -Xdict-size 100% \
		-e $VENOMROOTFS/var/cache/scratchpkg/sources/* \
		-e $VENOMROOTFS/var/cache/scratchpkg/packages/* \
		-e $VENOMROOTFS/tmp/*
}

main() {
	parseopt "$@"
	
	cleartmpdir
	
	if [ "$SRCTYPE" = "image" ]; then
		ROOTFS=$SRC
		extract_rootfs
		make_rootsfs
	elif [ "$SRCTYPE" = "dir" ]; then
		VENOMROOTFS=$SRC
		make_rootsfs
	elif [ "$SRCTYPE" = "sfs" ]; then
		VENOMROOTSFS=$SRC
		mkdir -p $VENOMROOTFS
		unsquashfs -f -d $VENOMROOTFS $VENOMROOTSFS /boot/vmlinuz-venom /boot/initrd-venom.img || die
	else
		echo "ERROR: source is not set."
		exit 1
	fi
	build_iso
	cleartmpdir
}

parseopt() {
	while [ "$1" ]; do
		case $1 in
			-o|--output)	if [ ! $2 ]; then
								echo "ERROR: option '$1' requires an argument."
								exit 1
							fi
							OUTPUT=$2
							shift ;;
				*)			if [ "$SRC" ]; then
								echo "ERROR: invalid option '$1'"
								exit 1
							fi
							case $1 in
								*.txz) SRCTYPE=image ;;
								*.sfs) SRCTYPE=sfs ;;
								*)     SRCTYPE=dir ;;
							esac
							SRC=$1 ;;
		esac
		shift
	done
}

DISTRONAME="Venom"
CWD=$(pwd)
ISOLINUXDIR=$CWD/isolinux
OVERLAYDIR=$CWD/virootfs
DATE=$(date +"%Y%m%d")

VENOMISODIR=/tmp/venomiso
VENOMROOTFS=$VENOMISODIR/venom-rootfs
VENOMISO=$VENOMISODIR/venom-iso
VENOMROOTSFS=$CWD/root.sfs

LABEL=VenomLinuxLive
OUTPUT=venom-x86_64-$DATE.iso

main "$@"

exit 0
